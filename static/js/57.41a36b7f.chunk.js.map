{"version":3,"file":"static/js/57.41a36b7f.chunk.js","mappings":"8LAwFA,WAAeA,EAAAA,EAAAA,KAbS,SAACC,GACvB,MAAO,CACLC,WAAYD,EAAME,MAAMD,WACxBE,WAAYH,EAAME,MAAMC,WAE5B,IAE2B,SAACC,GAC1B,MAAO,CACLF,MAAO,SAACG,GAAW,OAAKD,GAASF,EAAAA,EAAAA,IAAMG,GAAa,EAExD,GAEA,EAjFc,SAAHC,GAA2C,IAArCL,EAAUK,EAAVL,WAAYC,EAAKI,EAALJ,MAAOC,EAAUG,EAAVH,WAC5BI,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAC7CC,QAAQC,IAAIN,GACZ,IAAAO,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAMtBG,GAAWC,EAAAA,EAAAA,MAWjB,OAVAC,EAAAA,EAAAA,YAAU,WAEJzB,GAEAuB,EADW,UAATjB,EACO,oBAEA,eAGf,GAAG,CAACN,EAAYM,EAAMiB,KAEpBG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OACEF,UAAU,mBACVG,IAAI,gEACJC,IAAI,gBAENL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACH1B,IACC2B,EAAAA,EAAAA,KAAA,KAAGF,UAAU,gBAAeC,SAAC,gCAE/BF,EAAAA,EAAAA,MAAA,QAAMM,SA5BO,SAACC,GACpBA,EAAEC,iBACFjC,EAAM,CAAEgB,MAAAA,EAAOI,SAAAA,GACjB,EAyBqCO,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,QAAOP,SAAC,oBACvBC,EAAAA,EAAAA,KAAA,SACEO,KAAK,QACLC,GAAG,QACHC,KAAK,QACLC,YAAY,gBACZC,MAAOvB,EACPwB,SAAU,SAACR,GAAC,OAAKf,EAASe,EAAES,OAAOF,MAAM,QAG7Cd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAOM,QAAQ,WAAUP,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,SACEO,KAAK,WACLC,GAAG,WACHC,KAAK,WACLC,YAAY,WACZC,MAAOnB,EACPoB,SAAU,SAACR,GAAC,OAAKX,EAAYW,EAAES,OAAOF,MAAM,QAGhDX,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAAQR,SAAC,oBAG1BF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,cAAaC,SAAA,CAAC,2BACLC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,SAAQC,SAAC,oBAKvD,G","sources":["views/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../action/action\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport \"./Style.css\";\r\n\r\nconst Login = ({ isLoggedIn, login, loginError }) => {\r\n  const role = JSON.parse(localStorage.getItem(\"role\"));\r\n  console.log(role)\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    login({ email, password });\r\n  };\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    // Perform the navigation after the component has rendered and isLoggedIn is updated\r\n    if (isLoggedIn) {\r\n      if (role === \"Admin\") {\r\n        navigate(\"../manageemployee\");\r\n      } else {\r\n        navigate(\"../employees\");\r\n      }\r\n    }\r\n  }, [isLoggedIn, role, navigate]);\r\n  return (\r\n    <div className=\"login-container\">\r\n      <img\r\n        className=\"background-image\"\r\n        src=\"https://portal.grovehr.com/static/image/background-signup.jpg\"\r\n        alt=\"Background\"\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"login-box\">\r\n          <h3>Login to your account</h3>\r\n          {loginError && (\r\n            <p className=\"error-message\">Invalid email or password!</p>\r\n          )}\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"email\">Email Address*</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Email Address\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"password\">Password*</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n            <button type=\"submit\">Continue</button>\r\n          </form>\r\n        </div>\r\n        <span className=\"signuptitle\">\r\n          Don't have an account? <a className=\"signup\">Sign Up</a>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.login.isLoggedIn,\r\n    loginError: state.login.loginError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (credentials) => dispatch(login(credentials)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"],"names":["connect","state","isLoggedIn","login","loginError","dispatch","credentials","_ref","role","JSON","parse","localStorage","getItem","console","log","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","navigate","useNavigate","useEffect","_jsxs","className","children","_jsx","src","alt","onSubmit","e","preventDefault","htmlFor","type","id","name","placeholder","value","onChange","target"],"sourceRoot":""}