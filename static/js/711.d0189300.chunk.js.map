{"version":3,"file":"static/js/711.d0189300.chunk.js","mappings":"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","sources":["../node_modules/@iconify/react/dist/iconify.mjs"],"sourcesContent":["import React from 'react';\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      // Allow provider without '@': \"provider:prefix:name\"\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  // Dimensions\n  ...defaultIconSizeCustomisations,\n  // Transformations\n  ...defaultIconTransformations\n});\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  attributes.viewBox = box.left.toString() + \" \" + box.top.toString() + \" \" + boxWidth.toString() + \" \" + boxHeight.toString();\n  return {\n    attributes,\n    body\n  };\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      // Allowed characters before id: [#;\"]\n      // Allowed characters after id: [)\"], .[a-z]\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + suffix + \"$3\"\n    );\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    // API hosts\n    resources,\n    // Root path\n    path: source.path || \"/\",\n    // URL length limit\n    maxURL: source.maxURL || 500,\n    // Timeout before next host is used.\n    rotate: source.rotate || 750,\n    // Timeout before failing query.\n    timeout: source.timeout || 5e3,\n    // Randomise default API end point.\n    random: source.random === true,\n    // Start index\n    index: source.index || 0,\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {\n  }\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {\n  }\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {\n  }\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */ new Set(),\n  session: /* @__PURE__ */ new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = (index) => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && // Valid item: run callback\n      callback(data, index)) {\n        return true;\n      }\n    } catch (err) {\n    }\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, (item) => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(\n        provider,\n        prefix\n      );\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (\n    // Matches or newer\n    lastValue && lastValue >= lastModified\n  ) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (!setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(\n      func,\n      browserCachePrefix + index.toString(),\n      JSON.stringify(item)\n    );\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data) => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach((name) => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(\n                storage,\n                data\n              );\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach((name) => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const { provider, prefix } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToData(svg) {\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\n}\nfunction svgToURL(svg) {\n  return 'url(\"' + svgToData(svg) + '\")';\n}\n\nlet policy;\nfunction createPolicy() {\n  try {\n    policy = window.trustedTypes.createPolicy(\"iconify\", {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      createHTML: (s) => s\n    });\n  } catch (err) {\n    policy = null;\n  }\n}\nfunction cleanUpInnerHTML(html) {\n  if (policy === void 0) {\n    createPolicy();\n  }\n  return policy ? policy.createHTML(html) : html;\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Style modes\n */\nconst commonProps = {\n    display: 'inline-block',\n};\nconst monotoneProps = {\n    backgroundColor: 'currentColor',\n};\nconst coloredProps = {\n    backgroundColor: 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    Image: 'var(--svg)',\n    Repeat: 'no-repeat',\n    Size: '100% 100%',\n};\nconst propsToAddTo = {\n    WebkitMask: monotoneProps,\n    mask: monotoneProps,\n    background: coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = {\n    ...defaultExtendedIconCustomisations,\n    inline: true,\n};\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// True if icon should have vertical-align added\ninline, \n// Optional reference for SVG/SPAN, extracted by React.forwardRef()\nref) => {\n    // Get default properties\n    const defaultProps = inline\n        ? inlineDefaults\n        : defaultExtendedIconCustomisations;\n    // Get all customisations\n    const customisations = mergeCustomisations(defaultProps, props);\n    // Check mode\n    const mode = props.mode || 'svg';\n    // Create style\n    const style = {};\n    const customStyle = props.style || {};\n    // Create SVG component properties\n    const componentProps = {\n        ...(mode === 'svg' ? svgDefaults : {}),\n        ref,\n    };\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case 'mode':\n            case '_ref':\n            case '_inline':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    const renderAttribs = item.attributes;\n    // Inline display\n    if (customisations.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    if (mode === 'svg') {\n        // Add style\n        componentProps.style = {\n            ...style,\n            ...customStyle,\n        };\n        // Add icon stuff\n        Object.assign(componentProps, renderAttribs);\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\n        let localCounter = 0;\n        let id = props.id;\n        if (typeof id === 'string') {\n            // Convert '-' to '_' to avoid errors in animations\n            id = id.replace(/-/g, '_');\n        }\n        // Add icon stuff\n        componentProps.dangerouslySetInnerHTML = {\n            __html: cleanUpInnerHTML(replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact')),\n        };\n        return React.createElement('svg', componentProps);\n    }\n    // Render <span> with style\n    const { body, width, height } = icon;\n    const useMask = mode === 'mask' ||\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n    // Generate SVG\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: width + '',\n        height: height + '',\n    });\n    // Generate style\n    componentProps.style = {\n        ...style,\n        '--svg': svgToURL(html),\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...commonProps,\n        ...(useMask ? monotoneProps : coloredProps),\n        ...customStyle,\n    };\n    return React.createElement('span', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    initBrowserStorage();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nclass IconComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Render placeholder before component is mounted\n            icon: null,\n        };\n    }\n    /**\n     * Abort loading icon\n     */\n    _abortLoading() {\n        if (this._loading) {\n            this._loading.abort();\n            this._loading = null;\n        }\n    }\n    /**\n     * Update state\n     */\n    _setData(icon) {\n        if (this.state.icon !== icon) {\n            this.setState({\n                icon,\n            });\n        }\n    }\n    /**\n     * Check if icon should be loaded\n     */\n    _checkIcon(changed) {\n        const state = this.state;\n        const icon = this.props.icon;\n        // Icon is an object\n        if (typeof icon === 'object' &&\n            icon !== null &&\n            typeof icon.body === 'string') {\n            // Stop loading\n            this._icon = '';\n            this._abortLoading();\n            if (changed || state.icon === null) {\n                // Set data if it was changed\n                this._setData({\n                    data: icon,\n                });\n            }\n            return;\n        }\n        // Invalid icon?\n        let iconName;\n        if (typeof icon !== 'string' ||\n            (iconName = stringToIcon(icon, false, true)) === null) {\n            this._abortLoading();\n            this._setData(null);\n            return;\n        }\n        // Load icon\n        const data = getIconData(iconName);\n        if (!data) {\n            // Icon data is not available\n            if (!this._loading || this._loading.name !== icon) {\n                // New icon to load\n                this._abortLoading();\n                this._icon = '';\n                this._setData(null);\n                if (data !== null) {\n                    // Icon was not loaded\n                    this._loading = {\n                        name: icon,\n                        abort: loadIcons([iconName], this._checkIcon.bind(this, false)),\n                    };\n                }\n            }\n            return;\n        }\n        // Icon data is available\n        if (this._icon !== icon || state.icon === null) {\n            // New icon or icon has been loaded\n            this._abortLoading();\n            this._icon = icon;\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            // Set data\n            this._setData({\n                data,\n                classes,\n            });\n            if (this.props.onLoad) {\n                this.props.onLoad(icon);\n            }\n        }\n    }\n    /**\n     * Component mounted\n     */\n    componentDidMount() {\n        this._checkIcon(false);\n    }\n    /**\n     * Component updated\n     */\n    componentDidUpdate(oldProps) {\n        if (oldProps.icon !== this.props.icon) {\n            this._checkIcon(true);\n        }\n    }\n    /**\n     * Abort loading\n     */\n    componentWillUnmount() {\n        this._abortLoading();\n    }\n    /**\n     * Render\n     */\n    render() {\n        const props = this.props;\n        const icon = this.state.icon;\n        if (icon === null) {\n            // Render placeholder\n            return props.children\n                ? props.children\n                : React.createElement('span', {});\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                className: (typeof props.className === 'string'\n                    ? props.className + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render({\n            ...defaultIconProps,\n            ...icon.data,\n        }, newProps, props._inline, props._ref);\n    }\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = React.forwardRef(function Icon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: false,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: true,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n};\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs };\n"],"names":["matchIconName","stringToIcon","value","validate","allowSimpleName","provider","arguments","length","undefined","colonSeparated","split","slice","shift","name2","pop","prefix","result","name","validateIconName","dashSeparated","join","icon","match","defaultIconDimensions","Object","freeze","left","top","width","height","defaultIconTransformations","rotate","vFlip","hFlip","defaultIconProps","_objectSpread","defaultExtendedIconProps","body","hidden","mergeIconData","parent","child","obj1","obj2","mergeIconTransformations","key","internalGetIconData","data","tree","icons","aliases","create","currentProps","parse","forEach","parseIconSet","callback","names","not_found","Array","push","resolved","keys","concat","resolve","getIconsTree","item","optionalPropertyDefaults","checkOptionalProps","defaults","prop","quicklyValidateIconSet","obj","dataStorage","getStorage","providerStorage","missing","Set","newStorage","addIconSet","storage","add","simpleNames","allowSimpleNames","allow","getIconData","iconName","has","addIcon","err","addIconToStorage","defaultIconSizeCustomisations","defaultIconCustomisations","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","regex","randomPrefix","Date","now","toString","random","counter","replaceIDs","ids","exec","suffix","id","newID","escapedID","replace","RegExp","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","fetchModule","fetch","detectFetch","fetchAPIModule","prepare","results","maxLength","maxHostLength","host","max","url","calculateMaxLength","type","send","params","getPath","iconsList","URLSearchParams","uri","defaultError","then","response","status","json","setTimeout","shouldAbort","catch","removeCallback","storages","items","loaderCallbacks","filter","row","idCounter","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","floor","list","nextIndex","lastError","startTime","queriesSent","timer","queue","doneCallbacks","resetTimer","clearTimeout","abort","subscribe","overwrite","failQuery","clearQueue","execNext","resource","status2","isError","queued","indexOf","moduleResponse","queriesPending","initRedundancy","cfg","queries","cleanup","instance","queryCallback","doneCallback","query2","error","find","setIndex","getIndex","emptyCallback$1","redundancyCache","sendAPIQuery","target","redundancy","api","cached","cachedReundancy","getRedundancyCache","browserCacheVersion","browserCachePrefix","browserCacheCountKey","browserCacheVersionKey","browserStorageHour","browserStorageCacheExpiration","getStoredItem","func","getItem","setStoredItem","setItem","removeStoredItem","removeItem","setBrowserStorageItemsCount","getBrowserStorageItemsCount","parseInt","browserStorageConfig","local","session","browserStorageEmptyItems","browserStorageStatus","_window","window","getBrowserStorage","attr","iterateBrowserStorage","version","total2","i","minTime","parseItem","JSON","total","initBrowserStorage","iconSet","lastModified","lastModifiedCached","min","storeInBrowserStorage","store","set","delete","from","stringify","lastValue","updateLastModified","assign","emptyCallback","loadedNewIcons","iconsLoaderFlag","pendingCallbacksFlag","hasPending","oldLength","pending","loaded","updateCallbacks","loadIcons","cleanedIcons","listToIcons","sortedIcons","sort","a","b","localeCompare","lastIcon","localStorage","sortIcons","callCallback","lastProvider","lastPrefix","newIcons","sources","providerNewIcons","pendingQueue","pendingIcons","iconsToLoad","iconsQueueFlag","icons2","parsed","console","loadNewIcons","pendingSources","bind","storeCallback","policy","separator","flipFromString","custom","flip","str","trim","rotateFromString","defaultValue","units","value2","cleanUpInnerHTML","html","trustedTypes","createPolicy","createHTML","s","defaultExtendedIconCustomisations","inline","svgDefaults","commonProps","display","monotoneProps","backgroundColor","coloredProps","propsToAdd","Image","Repeat","Size","propsToAddTo","WebkitMask","mask","background","inlineDefaults","fixSize","render","props","ref","defaultProps","customisations","valueType","mergeCustomisations","mode","style","customStyle","componentProps","color","fullIcon","fullCustomisations","box","tempValue","transformations","rotation","unshift","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","setAttr","isUnsetKeyword","viewBox","iconToSVG","renderAttribs","verticalAlign","localCounter","dangerouslySetInnerHTML","__html","React","svg","useMask","renderAttribsHTML","iconToHTML","encodeSVGforURL","svgToData","document","IconifyPreload","preload","added","addCollection","e","IconifyProviders","providers","IconComponent","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","_createClass","this","_loading","setState","changed","_icon","_abortLoading","_setData","classes","onLoad","_checkIcon","oldProps","children","newProps","className","_inline","_ref","Icon"],"sourceRoot":""}